# what about a summary file for /videos? ... is this needed/

#################### code for non-movie and non-tv shows ##############################

# this is for the specific sub-dir checks ... not sure if it'd work for the overall checks
function getReportCustomDirs() 
{

    # results is the same var in both getReport functions 

    # -I : what file types to include
    # --dirsfirst: sort directories before files (not all in alphabetical order)
    # --prune: (WHEN USED WITH -I ) prunes out empty directories from output 

    # ?? do these need to be in vars? 
    dirCheckDetailedOutput=$(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $outputFileDetailed $results)
    dirCheckSummaryOutput=$(tree -d --prune -o $outputFileSummary $results)

}

####################################################################
# Meta function to check for the root level "/videos" directiory 
function checkForVideoDir() {

    clear 
    echo -e "Checking for custom videos /videos directory. now"


    # check for vids dir (/videos, in the root location) first, if it doesn't exist, there is no need to proceed
    if [ -d "$customVidsDir" ]; then 
        
        sectionTitle="videos"

        completeReportCustomVid
        # Here the TOTAL /videos catalog file will be dealt with 
        read -p "COMPLETE report for /videos directory created now"

        clear

        read -p "About to search for specific subdirectories"

        # subdir sorting code should go here 
        # pass to universalSubDirCheck function ... i think 
        
        subDirSearch=("educational" "homevids" "themeparks")
    
        universalSubdirCheck "${subDirSearch[@]}" "$sectionTitle"


    ## this doesn't make sense here .... this should be (I think) sort of inside "checkForSpecificSubDirs"
    elif [ ! -d "$customVidsDir" ]; then
        echo -e "videos directory not detected"

    else
        echo -e "Error detecting videos directory, on $driveLabel"
    fi 
}
