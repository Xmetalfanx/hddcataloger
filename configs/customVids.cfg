
#################### code for non-movie and non-tv shows ##############################

customVidsDir="$driveRoot/videos"

## do i need any of this? 
TheTeachingCompanyDir="$customVidsDir/educationial/ttc"
homevidsDir="$customVidsDir/homevids"
themeparkDir="$customVidsDir/themeparks"

##############################################################################################

# this is for the specific sub-dir checks ... not sure if it'd work for the overall checks 
function getReportCustomDirs() 
{
    ## what is the point of the $results syntax again? - answer: it is the subdir (say "tvshows" or "movies" in the other .cfg file)
    
    # results is the same var in both getReport functions 
    extendedResuts=$(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $outputFileDetailed $results)
    summaryResults=$(tree -d --prune -o $outputFileSummary $results)

}

# for the future
function outputAllsubDirs_to_their_own_folder 
{
    #for dir in */; do
        # $dir = each subdirectory in /videos
        
        
        
        # 1- create tree/catagory file 
        


        # 2 - add free space info to the end 

        # 3 - move to ~/Documents/Catalog subdir 

    #done

    return 

}


function completeReportCustomVid()
{
    # NOTE: this function only should run IF /videos is detected 
    
    ## as long as there are subdirs ... it generates a report to "date_drive_customVids.txt"
    # no specifics checks needed.
    outputFileDetailed="$pwdDriveLabel"_"videos"_$currentdate"_Detailed".txt 
    
    # Get complete report (doesn't sort /videos into sub catagory files)
    $(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $outputFileDetailed $customVidsDir)


    # add free space report to file 
    ## works
    outputfreeSpace

    # copy to ~/Documents/Catalog sub-dir 
    copyToHomeFolder

}

# this is NOT the meta function for custom videos but rather what is called IF /vids is detected 
function checkForSpecificCustomDirs()
{
    # Checks for SPECIFICALLY PASSED arguements and IF there is a match, create a specific catagory txt file for that 
    for results in $@
    {           
        customDirName=$(basename $results)
        read -p "customDirName: $customDirName"


        # this will not work .. $results is a full path 
        outputFileSummary="$pwdDriveLabel"_"$customDirName"_$currentdate"_Summary".txt 
        outputFileDetailed="$pwdDriveLabel"_"$customDirName"_$currentdate"_Detailed".txt 
    
        
        if [ -d "$results" ]; then
            
            read -p "$results dir found"

            # get summary if dir exists 
            getReport

            # add message about free space to the end of the outputed file from "getReport"
            outputfreeSpace
            
            # Copy file to home folder subdir so if i forget to do this, i dont have to plug each drive back in to do it 
            copyToHomeFolder
        else
            read -p "$results dir NOT found"
            
        fi
    }

}


# ?? Meta function? 
function checkForMoreVids() {
    echo -e "customVidsDir: $customVidsDir"

    # check for vids dir first, if it doesn't exist, there is no need to proceed
    if [ -d "$customVidsDir" ]; then 
        # Generates a report for the entire /videos dir 
        completeReportCustomVid

        # The following function call should be moved ... I think ... 
        # should i move this to the completeReportCustomVids function? 


        checkForSpecificCustomDirs "$TheTeachingCompanyDir" "$homevidsDir" "$themeparkDir"

    elif [ ! -d "$customVidsDir" ]; then
        echo -e "videos directory not detected"

    else
        echo -e "Error detecting if vids file exists"
    fi 
}
