## This is sort of the catch all for things needed (vars or function) by both sets of functions .. tvshow and movies ... AND 'other videos"
. variables.cfg


function copyToHomeFolder()
{

    catalogHomeDir="/home/$USER/Documents/Catalog/"

    echo -e "Copying created text files to Home/Documents/Catalog folder"


    if [ ! -d "$catalogHomeDir" ]; then
        mkdir $catalogHomeDir
    fi 

    specificCatDirHomeDir="$catalogHomeDir/$driveLabel"

    if [ ! -d "$specificCatDirHomeDir" ]; then
        mkdir "$specificCatDirHomeDir"
    fi 

    cp $outputFileSummary $specificCatDirHomeDir
    cp $outputFileDetailed $specificCatDirHomeDir

    # just shows the user that the file is now in their home folder 
    #ls $catalogHomeDir

}

#just a meta function that i can call that does the top two functions in one steps . the idea is make the code cleaner
function postReportSteps()
{
    ## 
    outputfreeSpace
    
    # Copies report (i think) to current home folder ... 
    # otherwise the reports are only on the drives and that would defeat the reasoning for these scripts
    copyToHomeFolder
}





# looks more like a universal function 

function loopThroughFiles()
{
    # var names? ... 
    for eachFile in dir 
    do

        


    done 
}



# this is for the FIRST level (of /videos) section checking only 
# This should make files that contain that main sub dir (and everything in it, into a single "subdir" (again first level only... further sorting comes later) tree command file 
function mainSubDirOutput()
{
    # goal/idea: <date>_<driveLabel>_Edu_<subSectionName>.txt
    currentSubDirOutputFile="$currentDate"_"$driveLabel"_Edu_"$currentSubSecName".txt

    tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh|*.srt" --dirsfirst --prune -o $currentSubDirOutputFile $currentSubSecDir

}

function checkSubVidsDirs() 
{
    # takes two vars
        # 1= currentSubDirName .. this is used to name the file
        # 2= currentSubSecDir

    if [[ "$currentSubDirName" == "educational" ]]; then 
        # takes care of everything under /video/educational sorting wise and i am thinking i should have /tgc (outside of /videos) there too 
        metaEduSubDirCheck

    fi 

}




# Problem here: the vars are not declared yet so i cant use this function here 
function outputfreeSpace() { 

    freespaceLeft=$(df -h /dev/sdb* | grep "/dev/sdb*"| awk ' { print $4 } ')


    # While there is probably a better way to do this ... 
    # the reason for this and no ELIF is "if both exist, I want the output to go to both"

    # The if statements check if the summary or Detailed files exist and if so, it adds the freespace line to the end 

    if [ -f $outputFileSummary ]; then
        echo -e "\n freespace left on drive: $freespaceLeft" >> "$outputFileSummary"
    fi 

    if [ -f $outputFileDetailed ]; then 
        echo -e "\n freespace left on drive: $freespaceLeft" >> "$outputFileDetailed"
    fi 

    # For sub-dir (in say /videos) checks
    ## THIS IS NOT GOING TO WORK ... too specific of a var  
    
    if [ -f $currentEduOutputFile ]; then 
        echo -e "\n freespace left on drive: $freespaceLeft" >> "$currentEduOutputFile"
    fi
}


#####################################################

# Outputs extended report and summary report to file 
function getReport() 
{
    extendedResuts=$(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $outputFileDetailed $driveRoot/$results)
    summaryResults=$(tree -d --prune -o $outputFileSummary $driveRoot/$results)
}