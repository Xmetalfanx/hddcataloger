
# copies hdd catalog file to home folder location
function universalCopyReportFiles()
{

    catalogHomeDir="/home/$USER/Documents/Catalog/"

    echo -e "\nCopying created text files to Home/Documents/Catalog folder\n"

    # if home dir to store catalog files DOES NOT exist, create it
    if [ ! -d "$catalogHomeDir" ]; then
        echo -e "Creating Directory to store catalog files in /Home/<user here>/Documents/Catalog"
        mkdir $catalogHomeDir
    fi

    specificCatDirHomeDir="$catalogHomeDir/$driveLabel"

    # if the specific dirs for each hdd are not there, create the dir for current hdd
    if [ ! -d "$specificCatDirHomeDir" ]; then
        mkdir "$specificCatDirHomeDir"
    fi

    if [ -f $summaryOutputFilename ]; then

        echo -e "Copying Summary Catalog file to hdd root: $driveRoot"
        cp $summaryOutputFilename $driveRoot

        echo -e "Copying Summary Catalog file to Home Folder location"
        # copy the files to the home folder location
        cp $summaryOutputFilename $specificCatDirHomeDir

    fi


    if [ -f $detailedOutputFilename ]; then

        echo -e "Copying Detailed Catalog file to hdd root: $driveRoot"
        # note to self: this will fail  ownership permissions are bad
        cp $detailedOutputFilename $driveRoot

        echo -e  "Copying Detailed Catalog file to Home Folder location"
        # copy the files to the home folder location
        cp $detailedOutputFilename $specificCatDirHomeDir
    fi

}

# Problem here: the vars are not declared yet so i cant use this function here
function universalOutputFreeSpace() {

    freespaceLeft=$(df -h /dev/sdb* | grep "/dev/sdb*"| awk ' { print $4 } ')

    # The if statements check if the summary or Detailed files exist and if so, it adds the freespace line to the end

    if [ -f $summaryOutputFilename ]; then
        echo -e "\n freespace left on drive: $freespaceLeft" >> "$summaryOutputFilename"
    fi

    if [ -f $outputFileDetailed ]; then
        echo -e "\n freespace left on drive: $freespaceLeft" >> "$detailedOutputFilename"
    fi

}

#####################################################

# Outputs extended report and summary report to file
function universalGetReports()
{
    # -dirsfirst = directories all above files
    # -prune = prune out empty directories

    # Details
    $(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $detailedOutputFilename $driveRoot/$search)

    #summary
    $(tree -d --prune -o $summaryOutputFilename $driveRoot/$search)

    # put call to add free space function here
    universalOutputFreeSpace $summaryOutputFilename $detailedOutputFilename

    # Function call to copy reports
    universalCopyReportFiles
}
##################################################################################3

## Meta function
function universalCheckForDirs()
{
    # 2> /dev/null = to not display the output

    for search in $@
    {

        # Place to put output
        ## dir's could be root level like "movies" OR
        summaryOutputFilename="$driveLabel"_"$search"_$currentdate"_Summary".txt
        detailedOutputFilename="$driveLabel"_"$search"_$currentdate"_Detailed".txt

        # If the dir (argument passed), exists
        if [ -d "$driveRoot/$search" ]; then
            read -p "$search directory found"

            #universalGetReports

            if [ "$search" == "christmasRelated" ]; then
                christmasRelatedSubDirSearch
            fi

        else
            read -p "$search directory NOT found"
        fi
    }
}