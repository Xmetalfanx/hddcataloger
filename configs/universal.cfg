## This is sort of the catch all for things needed (vars or function) by both sets of functions .. tvshow and movies ... AND 'other videos"


############################### Vars #####################################

# I need to know the date that this was collected
currentdate=$(date +"%B_%d_%Y")
# example output: October_24_2020

# Gets the name of sdb 
# driveLabel seems to be better for when i am not running the script in the root of the ext drive

## note to self: this causes a loop
#driveLabel=$(lsblk -o LABEL /dev/sdb | sed 's/LABEL//g' | awk NF)

# simpiler way to get the drivelabel i think .. now planning to run the scripts from the internal drive 
# running this from a different location than the drive's root ... this one will not work 
pwdDriveLabel=$(basename $PWD)

############################### End Vars #####################################


function outputfreeSpace() { 

    freespaceLeft=$(df -h /dev/sdb* | grep "/dev/sdb*"| awk ' { print $4 } ')

    # not sure if this is the most elegant way to do it ... just want to add a SPACE before the output of this command 

    # Blank line
    echo >> $outputFileSummary
    echo >> $outputFileDetailed

    echo -e "freespace left on drive: $freespaceLeft" >> $outputFileSummary
    echo -e "freespace left on drive: $freespaceLeft" >> $outputFileDetailed
}

function copyToHomeFolder()
{
    catalogHomeDir="/home/$USER/Documents/Catalog"

    echo -e "Copying created text files to Home/Documents/Catalog folder"

    if [ ! -d $catalogHomeDir ]; then
        mkdir $catalogHomeDir
    else
        return
    fi 
    
    ######
    echo -e "test: still inside copyToHomeFolder function"
    ##

    ## Here i should be in the hdd's root folder (when this script is placed there )
    cp $outputFileSummary $catalogHomeDir 
    cp $outputFileDetailed $catalogHomeDir

    # just shows the user that the file is now in their home folder 
    #ls $catalogHomeDir

}

####################################################################

function getReport() 
{
    extendedResuts=$(tree -I "*.jpg|*.png|*.nfo|*.tbn|*.txt|*.sh" --dirsfirst --prune -o $outputFileDetailed $results)
    summaryResults=$(tree -d --prune -o $outputFileSummary $results)
}